
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2017.4 (64-bit)
  **** SW Build 2086221 on Fri Dec 15 20:54:30 MST 2017
  **** IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
    ** Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/fabio/Desktop/linreg/ip_repo/gradientdescent_1.0'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/fabio/Code/linreg'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2017.4/data/ip'.
Command: link_design -top design_1_wrapper -part xc7a100tcsg324-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_intc_0_0/design_1_axi_intc_0_0.dcp' for cell 'design_1_i/axi_intc_0'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_uartlite_0_0/design_1_axi_uartlite_0_0.dcp' for cell 'design_1_i/axi_uartlite_0'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0.dcp' for cell 'design_1_i/clk_wiz_1'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_gradientdescent_0_0/design_1_gradientdescent_0_0.dcp' for cell 'design_1_i/gradientdescent_0'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_mdm_1_0/design_1_mdm_1_0.dcp' for cell 'design_1_i/mdm_1'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_microblaze_0_0/design_1_microblaze_0_0.dcp' for cell 'design_1_i/microblaze_0'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_rst_clk_wiz_1_100M_0/design_1_rst_clk_wiz_1_100M_0.dcp' for cell 'design_1_i/rst_clk_wiz_1_100M'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_xlconstant_0_0/design_1_xlconstant_0_0.dcp' for cell 'design_1_i/xlconstant_0'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/axi_interconnect_0/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_dlmb_bram_if_cntlr_0/design_1_dlmb_bram_if_cntlr_0.dcp' for cell 'design_1_i/microblaze_0_local_memory/dlmb_bram_if_cntlr'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_dlmb_v10_0/design_1_dlmb_v10_0.dcp' for cell 'design_1_i/microblaze_0_local_memory/dlmb_v10'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_ilmb_bram_if_cntlr_0/design_1_ilmb_bram_if_cntlr_0.dcp' for cell 'design_1_i/microblaze_0_local_memory/ilmb_bram_if_cntlr'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_ilmb_v10_0/design_1_ilmb_v10_0.dcp' for cell 'design_1_i/microblaze_0_local_memory/ilmb_v10'
INFO: [Project 1-454] Reading design checkpoint '/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_lmb_bram_0/design_1_lmb_bram_0.dcp' for cell 'design_1_i/microblaze_0_local_memory/lmb_bram'
INFO: [Netlist 29-17] Analyzing 925 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xc7a100tcsg324-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_microblaze_0_0/design_1_microblaze_0_0.xdc] for cell 'design_1_i/microblaze_0/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_microblaze_0_0/design_1_microblaze_0_0.xdc] for cell 'design_1_i/microblaze_0/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_mdm_1_0/design_1_mdm_1_0.xdc] for cell 'design_1_i/mdm_1/U0'
INFO: [Timing 38-35] Done setting XDC timing constraints. [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_mdm_1_0/design_1_mdm_1_0.xdc:50]
get_clocks: Time (s): cpu = 00:00:17 ; elapsed = 00:00:25 . Memory (MB): peak = 2074.699 ; gain = 534.445 ; free physical = 1526 ; free virtual = 8009
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_mdm_1_0/design_1_mdm_1_0.xdc] for cell 'design_1_i/mdm_1/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0_board.xdc] for cell 'design_1_i/clk_wiz_1/inst'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0_board.xdc] for cell 'design_1_i/clk_wiz_1/inst'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0.xdc] for cell 'design_1_i/clk_wiz_1/inst'
INFO: [Timing 38-2] Deriving generated clocks [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0.xdc:57]
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_clk_wiz_1_0/design_1_clk_wiz_1_0.xdc] for cell 'design_1_i/clk_wiz_1/inst'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_rst_clk_wiz_1_100M_0/design_1_rst_clk_wiz_1_100M_0_board.xdc] for cell 'design_1_i/rst_clk_wiz_1_100M/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_rst_clk_wiz_1_100M_0/design_1_rst_clk_wiz_1_100M_0_board.xdc] for cell 'design_1_i/rst_clk_wiz_1_100M/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_rst_clk_wiz_1_100M_0/design_1_rst_clk_wiz_1_100M_0.xdc] for cell 'design_1_i/rst_clk_wiz_1_100M/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_rst_clk_wiz_1_100M_0/design_1_rst_clk_wiz_1_100M_0.xdc] for cell 'design_1_i/rst_clk_wiz_1_100M/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_intc_0_0/design_1_axi_intc_0_0.xdc] for cell 'design_1_i/axi_intc_0/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_intc_0_0/design_1_axi_intc_0_0.xdc] for cell 'design_1_i/axi_intc_0/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_uartlite_0_0/design_1_axi_uartlite_0_0_board.xdc] for cell 'design_1_i/axi_uartlite_0/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_uartlite_0_0/design_1_axi_uartlite_0_0_board.xdc] for cell 'design_1_i/axi_uartlite_0/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_uartlite_0_0/design_1_axi_uartlite_0_0.xdc] for cell 'design_1_i/axi_uartlite_0/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_uartlite_0_0/design_1_axi_uartlite_0_0.xdc] for cell 'design_1_i/axi_uartlite_0/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_dlmb_v10_0/design_1_dlmb_v10_0.xdc] for cell 'design_1_i/microblaze_0_local_memory/dlmb_v10/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_dlmb_v10_0/design_1_dlmb_v10_0.xdc] for cell 'design_1_i/microblaze_0_local_memory/dlmb_v10/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_ilmb_v10_0/design_1_ilmb_v10_0.xdc] for cell 'design_1_i/microblaze_0_local_memory/ilmb_v10/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_ilmb_v10_0/design_1_ilmb_v10_0.xdc] for cell 'design_1_i/microblaze_0_local_memory/ilmb_v10/U0'
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/constrs_1/imports/Downloads/Nexys4_Master.xdc]
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/constrs_1/imports/Downloads/Nexys4_Master.xdc]
Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_intc_0_0/design_1_axi_intc_0_0_clocks.xdc] for cell 'design_1_i/axi_intc_0/U0'
Finished Parsing XDC File [/home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_axi_intc_0_0/design_1_axi_intc_0_0_clocks.xdc] for cell 'design_1_i/axi_intc_0/U0'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Generating merged BMM file for the design top 'design_1_wrapper'...
INFO: [Memdata 28-144] Successfully populated the BRAM INIT strings from the following elf files: /home/fabio/Desktop/linreg/linreg.srcs/sources_1/bd/design_1/ip/design_1_microblaze_0_0/data/mb_bootloop_le.elf 
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 96 instances were transformed.
  LUT6_2 => LUT6_2 (LUT5, LUT6): 80 instances
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 16 instances

28 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:31 ; elapsed = 00:00:49 . Memory (MB): peak = 2075.711 ; gain = 901.645 ; free physical = 1587 ; free virtual = 8048
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2107.715 ; gain = 32.004 ; free physical = 1582 ; free virtual = 8043
INFO: [Timing 38-35] Done setting XDC timing constraints.

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 2 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1a9568c7e

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1582 ; free virtual = 8043
INFO: [Opt 31-389] Phase Retarget created 98 cells and removed 162 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 1 inverter(s) to 1 load pin(s).
Phase 2 Constant propagation | Checksum: 1961bb002

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1582 ; free virtual = 8043
INFO: [Opt 31-389] Phase Constant propagation created 8 cells and removed 53 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 120d7701f

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1580 ; free virtual = 8041
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 674 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 120d7701f

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1580 ; free virtual = 8041
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 120d7701f

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1579 ; free virtual = 8040
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.03 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1579 ; free virtual = 8040
Ending Logic Optimization Task | Checksum: 13b0be76e

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2112.715 ; gain = 0.000 ; free physical = 1579 ; free virtual = 8040

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=12.993 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 16 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 16 newly gated: 0 Total Ports: 32
Ending PowerOpt Patch Enables Task | Checksum: c47aefd4

Time (s): cpu = 00:00:00.17 ; elapsed = 00:00:00.18 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1552 ; free virtual = 8013
Ending Power Optimization Task | Checksum: c47aefd4

Time (s): cpu = 00:00:16 ; elapsed = 00:00:06 . Memory (MB): peak = 2355.859 ; gain = 243.145 ; free physical = 1561 ; free virtual = 8022

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 1 Remap
Phase 1 Remap | Checksum: 1a8b3b875

Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1566 ; free virtual = 8027
INFO: [Opt 31-389] Phase Remap created 16 cells and removed 48 cells
Ending Logic Optimization Task | Checksum: 1a8b3b875

Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1566 ; free virtual = 8027
INFO: [Common 17-83] Releasing license: Implementation
51 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:33 ; elapsed = 00:00:16 . Memory (MB): peak = 2355.859 ; gain = 280.148 ; free physical = 1566 ; free virtual = 8027
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1565 ; free virtual = 8027
INFO: [Common 17-1381] The checkpoint '/home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1554 ; free virtual = 8018
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: aa94f54f

Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.05 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1554 ; free virtual = 8018
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.03 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1559 ; free virtual = 8023

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: fa84b018

Time (s): cpu = 00:00:08 ; elapsed = 00:00:04 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1529 ; free virtual = 7993

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 13bf70917

Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1517 ; free virtual = 7980

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 13bf70917

Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1517 ; free virtual = 7980
Phase 1 Placer Initialization | Checksum: 13bf70917

Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1517 ; free virtual = 7980

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: 4f62dc02

Time (s): cpu = 00:00:29 ; elapsed = 00:00:15 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1501 ; free virtual = 7965

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 4f62dc02

Time (s): cpu = 00:00:29 ; elapsed = 00:00:15 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1501 ; free virtual = 7965

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 17b292d9d

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1500 ; free virtual = 7964

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: f1170166

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1500 ; free virtual = 7964

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 148c919b1

Time (s): cpu = 00:00:33 ; elapsed = 00:00:18 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1500 ; free virtual = 7964

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 78303aad

Time (s): cpu = 00:00:35 ; elapsed = 00:00:19 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1497 ; free virtual = 7961

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: eec96b8e

Time (s): cpu = 00:00:35 ; elapsed = 00:00:19 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1497 ; free virtual = 7961

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: eec96b8e

Time (s): cpu = 00:00:35 ; elapsed = 00:00:19 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1497 ; free virtual = 7961
Phase 3 Detail Placement | Checksum: eec96b8e

Time (s): cpu = 00:00:35 ; elapsed = 00:00:19 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1497 ; free virtual = 7961

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1c1c5269c

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs
INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 1c1c5269c

Time (s): cpu = 00:00:43 ; elapsed = 00:00:22 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1493 ; free virtual = 7957
INFO: [Place 30-746] Post Placement Timing Summary WNS=5.533. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 25a216d0d

Time (s): cpu = 00:00:43 ; elapsed = 00:00:22 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1493 ; free virtual = 7957
Phase 4.1 Post Commit Optimization | Checksum: 25a216d0d

Time (s): cpu = 00:00:43 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1493 ; free virtual = 7957

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 25a216d0d

Time (s): cpu = 00:00:43 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1494 ; free virtual = 7958

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 25a216d0d

Time (s): cpu = 00:00:43 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1494 ; free virtual = 7958

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 267c6be22

Time (s): cpu = 00:00:44 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1494 ; free virtual = 7958
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 267c6be22

Time (s): cpu = 00:00:44 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1494 ; free virtual = 7958
Ending Placer Task | Checksum: 1807365a4

Time (s): cpu = 00:00:44 ; elapsed = 00:00:23 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1505 ; free virtual = 7969
INFO: [Common 17-83] Releasing license: Implementation
73 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:48 ; elapsed = 00:00:24 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1505 ; free virtual = 7969
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.54 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1493 ; free virtual = 7968
INFO: [Common 17-1381] The checkpoint '/home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.05 ; elapsed = 00:00:00.06 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1496 ; free virtual = 7963
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.08 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1502 ; free virtual = 7970
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.02 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1502 ; free virtual = 7970
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 964b996b ConstDB: 0 ShapeSum: ea27cc39 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: ec2a96c2

Time (s): cpu = 00:00:32 ; elapsed = 00:00:25 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1353 ; free virtual = 7821
Post Restoration Checksum: NetGraph: 19d97728 NumContArr: d2511f9a Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: ec2a96c2

Time (s): cpu = 00:00:32 ; elapsed = 00:00:25 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1352 ; free virtual = 7819

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: ec2a96c2

Time (s): cpu = 00:00:32 ; elapsed = 00:00:25 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1336 ; free virtual = 7803

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: ec2a96c2

Time (s): cpu = 00:00:32 ; elapsed = 00:00:25 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1336 ; free virtual = 7803
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1e164f558

Time (s): cpu = 00:00:42 ; elapsed = 00:00:29 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1321 ; free virtual = 7788
INFO: [Route 35-416] Intermediate Timing Summary | WNS=5.623  | TNS=0.000  | WHS=-0.192 | THS=-28.552|

Phase 2 Router Initialization | Checksum: 1e1e223cd

Time (s): cpu = 00:00:45 ; elapsed = 00:00:30 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1320 ; free virtual = 7787

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 1e8d8ddab

Time (s): cpu = 00:00:51 ; elapsed = 00:00:32 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1317 ; free virtual = 7784

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 607
 Number of Nodes with overlaps = 27
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.367  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 18146f2a4

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.367  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1fa193b5b

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782
Phase 4 Rip-up And Reroute | Checksum: 1fa193b5b

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1fa193b5b

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1fa193b5b

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782
Phase 5 Delay and Skew Optimization | Checksum: 1fa193b5b

Time (s): cpu = 00:01:02 ; elapsed = 00:00:35 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1ffd931ed

Time (s): cpu = 00:01:04 ; elapsed = 00:00:36 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.375  | TNS=0.000  | WHS=0.035  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 22b0853fb

Time (s): cpu = 00:01:04 ; elapsed = 00:00:36 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782
Phase 6 Post Hold Fix | Checksum: 22b0853fb

Time (s): cpu = 00:01:04 ; elapsed = 00:00:36 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 3.03033 %
  Global Horizontal Routing Utilization  = 3.1001 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 20ee86777

Time (s): cpu = 00:01:04 ; elapsed = 00:00:36 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 20ee86777

Time (s): cpu = 00:01:04 ; elapsed = 00:00:36 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1313 ; free virtual = 7781

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1793e25db

Time (s): cpu = 00:01:05 ; elapsed = 00:00:37 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=4.375  | TNS=0.000  | WHS=0.035  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1793e25db

Time (s): cpu = 00:01:05 ; elapsed = 00:00:37 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1314 ; free virtual = 7782
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:05 ; elapsed = 00:00:37 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1338 ; free virtual = 7805

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
90 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:09 ; elapsed = 00:00:39 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1338 ; free virtual = 7805
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.64 . Memory (MB): peak = 2355.859 ; gain = 0.000 ; free physical = 1321 ; free virtual = 7804
INFO: [Common 17-1381] The checkpoint '/home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/fabio/Desktop/linreg/linreg.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:18 ; elapsed = 00:00:06 . Memory (MB): peak = 2369.117 ; gain = 0.000 ; free physical = 1292 ; free virtual = 7765
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
102 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__3 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__3 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__4 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__4 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__5 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__5 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__6 input design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__0 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__1 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__10 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__11 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__12 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__13 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__14 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__15 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__16 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__16/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__17 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__18 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__19 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__2 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__20 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__21 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__22 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__23 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__24 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__24/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__25 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__25/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__26 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__26/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__27 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__27/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__28 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__28/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__29 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__29/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__3 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__30 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__31 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__31/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__32 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__32/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__33 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__33/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__34 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__34/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__35 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__35/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__36 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__36/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__37 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__37/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__38 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__38/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__39 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__39/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__4 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__40 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__40/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__41 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__41/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__42 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__42/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__43 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__43/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__44 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__44/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__45 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__45/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__46 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__46/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__5 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__6 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__7 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__8 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__9 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2 output design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__0 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__1 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__10 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__11 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__12 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__13 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__14 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__15 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__16 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__17 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__18 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__19 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__2 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__20 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__21 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__22 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__23 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__24 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__25 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__26 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__27 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__28 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__29 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__3 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__30 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__31 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__32 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__33 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__34 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__35 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__36 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__37 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__38 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__39 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__4 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__40 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__41 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__42 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__43 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__44 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__45 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__46 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__5 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__6 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__7 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__8 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__9 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/h/ARG__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__15/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__17/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__19/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__23/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__24/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__25/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__26/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__27/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__28/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__29/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__30/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__31/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__33/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__34/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__35/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__36/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__37/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__38/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__39/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__40/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__41/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__43/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__44/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__45/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__46/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t1/ARG__9/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2 multiplier stage design_1_i/gradientdescent_0/U0/gradientdescent_v1_0_S00_AXIS_inst/mini_batch_gradient_descent/t2/ARG__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 271 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 4 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] '/home/fabio/Desktop/linreg/linreg.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Tue Jul 10 23:37:22 2018. For additional details about this file, please refer to the WebTalk help file at /opt/Xilinx/Vivado/2017.4/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
122 Infos, 266 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:37 ; elapsed = 00:02:33 . Memory (MB): peak = 2709.012 ; gain = 324.773 ; free physical = 1238 ; free virtual = 7722
INFO: [Common 17-206] Exiting Vivado at Tue Jul 10 23:37:22 2018...
